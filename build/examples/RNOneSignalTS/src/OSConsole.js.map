{"version":3,"file":"OSConsole.js","sourceRoot":"","sources":["../../../../examples/RNOneSignalTS/src/OSConsole.tsx"],"names":[],"mappings":"AAAA;;;;;;;;GAQG;AAEH,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,YAAY,EACZ,UAAU,EACV,UAAU,EACV,IAAI,EACJ,IAAI,EACJ,QAAQ,GACT,MAAM,cAAc,CAAC;AAEtB,OAAO,EACL,MAAM,EACP,MAAM,qCAAqC,CAAC;AAS7C,MAAM,SAAU,SAAQ,KAAK,CAAC,SAAuB;IACjD,YAAY,KAAY;QACpB,KAAK,CAAC,KAAK,CAAC,CAAC;IACjB,CAAC;IAED,WAAW,GAAG,GAAG,EAAE;QACjB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAA;IAC7B,CAAC,CAAA;IAED,MAAM;QACF,OAAO,CACH,oBAAC,YAAY,IAAC,KAAK,EAAE,MAAM,CAAC,IAAI;YAC5B,oBAAC,UAAU,IAAC,mBAAmB,EAAE,IAAI,EACnC,KAAK,EAAE,MAAM,CAAC,UAAU,EACxB,GAAG,EAAE,CAAC,UAAU,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA,CAAC,CAAC,EACrD,mBAAmB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;gBACxE,oBAAC,IAAI,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO;oBACvB,oBAAC,IAAI,IAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,IAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAQ,CACpG,CACI,CACF,CAClB,CAAC;IACN,CAAC;CACJ;AAAA,CAAC;AAEF,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAC/B,UAAU,EAAE;QACV,eAAe,EAAE,MAAM,CAAC,OAAO;KAChC;IACD,IAAI,EAAE;QACJ,eAAe,EAAE,MAAM;QACvB,MAAM,EAAE,GAAG;QACX,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,CAAC;QACX,aAAa,EAAE,KAAK;KACrB;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,EAAE;QACX,aAAa,EAAE,KAAK;KACrB;IACD,OAAO,EAAE;QACL,UAAU,EAAE,SAAS;QACrB,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,EAAE;KACf;IACD,WAAW,EAAE;QACT,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE,EAAE;KACf;CACF,CAAC,CAAC;AAEH,eAAe,SAAS,CAAC","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * Generated with the TypeScript template\n * https://github.com/react-native-community/react-native-template-typescript\n *\n * @format\n */\n\nimport React from 'react';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  ScrollView,\n  View,\n  Text,\n  Platform,\n} from 'react-native';\n\nimport {\n  Colors\n} from 'react-native/Libraries/NewAppScreen';\n\nexport interface Props {\n    value: string;\n}\n\nexport interface State {\n}\n\nclass OSConsole extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    scrollToEnd = () => {\n      this.scrollView.scrollToEnd\n    }\n\n    render() {\n        return (\n            <SafeAreaView style={styles.body}>\n                <ScrollView nestedScrollEnabled={true}\n                  style={styles.scrollView}\n                  ref={(scrollView) => { this.scrollView = scrollView }}\n                  onContentSizeChange={() => this.scrollView.scrollToEnd({animated: true})}>\n                  <View style={styles.console}>\n                      <Text style={Platform.OS === \"android\" ? styles.textAndroid : styles.textIOS}>{this.props.value}</Text>\n                  </View>\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: Colors.lighter,\n  },\n  body: {\n    backgroundColor: 'grey',\n    height: 200,\n    flex: 1,\n    flexGrow: 1,\n    flexDirection: 'row'\n  },\n  console: {\n    flexWrap: 'wrap',\n    padding: 10,\n    flexDirection: 'row'\n  },\n  textIOS: {\n      fontFamily: 'Courier',\n      flex: 1,\n      flexWrap: 'wrap',\n      fontSize: 10,\n  },\n  textAndroid: {\n      flex: 1,\n      flexWrap: 'wrap',\n      fontSize: 20,\n  }\n});\n\nexport default OSConsole;\n"]}