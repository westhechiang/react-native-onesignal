{"version":3,"file":"Helpers.js","sourceRoot":"","sources":["../../../../examples/RNOneSignalTS/src/Helpers.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAY,oBAAoB,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACnG,MAAM,aAAa,GAAG,SAAS,CAAC;AAEhC,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAE,KAAa,EAAE,QAAkB,EAAE,EAAE;IAChF,OAAO,CACH,oBAAC,IAAI,IACD,GAAG,EAAE,IAAI,GAAG,SAAS,EACrB,KAAK,EAAE,MAAM,CAAC,eAAe;QAE7B,oBAAC,MAAM,IACH,GAAG,EAAE,IAAI,EACT,KAAK,EAAE,IAAI,EACX,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAA,CAAC,CAAC,GAC/B,CACC,CACV,CAAC;AACN,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,IAAY,EAAE,KAAa,EAAE,QAAkB,EAAE,EAAE;IAC/E,OAAO,CACH,oBAAC,oBAAoB,IACjB,GAAG,EAAE,IAAI,GAAG,yBAAyB,EACrC,KAAK,EAAE;YACH,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,oBAAoB;YACjC,WAAW,EAAE,CAAC;YACd,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,CAAC;SAAC;QAGjB,oBAAC,SAAS,IACN,GAAG,EAAE,IAAI,EACT,KAAK,EAAE,MAAM,CAAC,SAAS,EACvB,WAAW,EAAE,IAAI,EACjB,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,KAAK,EAChB,aAAa,EAAC,MAAM,EACpB,SAAS,EAAC,QAAQ,EAClB,oBAAoB,EAAC,SAAS,EAC9B,QAAQ,EAAE,IAAI,EACd,cAAc,EAAC,MAAM,EACrB,YAAY,EAAE,QAAQ,GACxB,CACiB,CAC1B,CAAC;AACN,CAAC,CAAA;AAED,iBAAiB;AACjB,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAC7B,eAAe,EAAE;QACb,aAAa,EAAE,QAAQ;QACvB,QAAQ,EAAE,QAAQ;QAClB,YAAY,EAAE,EAAE;QAChB,cAAc,EAAE,EAAE;QAClB,gBAAgB,EAAE,EAAE;KACvB;IACD,SAAS,EAAE;QACP,gBAAgB,EAAE,EAAE;QACpB,MAAM,EAAE,EAAE;KACb;CACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Button, View, StyleSheet, Platform, KeyboardAvoidingView, TextInput } from \"react-native\";\nconst disabledColor = '#BEBEBE';\n\nexport const renderButtonView = (name: string, color: string, callback: Function) => {\n    return (\n        <View\n            key={name + '_parent'}\n            style={styles.buttonContainer}\n        >\n            <Button\n                key={name}\n                title={name}\n                color={color}\n                onPress={() => { callback() }}\n            />\n        </View>\n    );\n}\n\nexport const renderFieldView = (name: string, value: string, callback: Function) => {\n    return (\n        <KeyboardAvoidingView\n            key={name + '_keyboard_avoiding_view'}\n            style={{\n                width: 300,\n                height: 40,\n                borderColor: textInputBorderColor,\n                borderWidth: 2,\n                borderRadius: 5,\n                marginTop: 8}}\n        >\n\n            <TextInput\n                key={name}\n                style={styles.textInput}\n                placeholder={name}\n                value={value}\n                multiline={false}\n                returnKeyType=\"done\"\n                textAlign=\"center\"\n                placeholderTextColor=\"#d1dde3\"\n                editable={true}\n                autoCapitalize=\"none\"\n                onChangeText={callback}\n            />\n        </KeyboardAvoidingView>\n    );\n}\n\n/* S T Y L E S */\nconst styles = StyleSheet.create({\n    buttonContainer: {\n        flexDirection: 'column',\n        overflow: 'hidden',\n        borderRadius: 10,\n        marginVertical: 10,\n        marginHorizontal: 10,\n    },\n    textInput: {\n        marginHorizontal: 10,\n        height: 40,\n    },\n});\n"]}