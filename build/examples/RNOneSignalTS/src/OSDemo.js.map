{"version":3,"file":"OSDemo.js","sourceRoot":"","sources":["../../../../examples/RNOneSignalTS/src/OSDemo.tsx"],"names":[],"mappings":"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","sourcesContent":["import OneSignal from 'react-native-onesignal';\nimport * as React from 'react';\nimport { StyleSheet, View, Text, TextInput, Alert} from 'react-native';\nimport OSButtons from './OSButtons';\nimport { SubscribeFields } from './models/SubscribeFields';\nimport OSConsole from './OSConsole';\nimport { renderButtonView } from './Helpers';\n\nexport interface Props {\n  name: string;\n}\n\nexport interface State {\n    name: string;\n    isSubscribed: boolean;\n    isLocationShared: boolean;\n    requiresPrivacyConsent: boolean;\n    consoleValue: string;\n    inputValue: string;\n}\n\nclass OSDemo extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            name: props.name,\n            isSubscribed: false,\n            requiresPrivacyConsent: false,\n            isLocationShared: false,\n            inputValue: \"\",\n            consoleValue: \"\"\n        }\n    }\n\n    async componentDidMount() {\n        /* O N E S I G N A L   S E T U P */\n        OneSignal.setAppId(\"ce8572ae-ff57-4e77-a265-5c91f00ecc4c\");\n        OneSignal.setLogLevel(6, 0);\n        OneSignal.setRequiresUserPrivacyConsent(this.state.requiresPrivacyConsent);\n        OneSignal.promptForPushNotificationsWithUserResponse(response => {\n            this.OSLog(\"Prompt response:\", response);\n        });\n\n        /* O N E S I G N A L  H A N D L E R S */\n        OneSignal.setNotificationWillShowInForegroundHandler(notifReceivedEvent => {\n            this.OSLog(\"OneSignal: notification will show in foreground:\", notifReceivedEvent);\n            let notif = notifReceivedEvent.getNotification();\n\n            const button1 = {\n                text: \"Cancel\",\n                onPress: () => { notifReceivedEvent.complete(); },\n                style: \"cancel\"\n            };\n\n            const button2 = { text: \"Complete\", onPress: () => { notifReceivedEvent.complete(notif); }};\n\n            Alert.alert(\"Complete notification?\", \"Test\", [ button1, button2], { cancelable: true });\n        });\n        OneSignal.setNotificationOpenedHandler(notification => {\n            this.OSLog(\"OneSignal: notification opened:\", notification);\n        });\n        OneSignal.setInAppMessageClickHandler(event => {\n            this.OSLog(\"OneSignal IAM clicked:\", event);\n        });\n        OneSignal.addEmailSubscriptionObserver((event) => {\n            this.OSLog(\"OneSignal: email subscription changed: \", event);\n        });\n        OneSignal.addSubscriptionObserver(event => {\n            this.OSLog(\"OneSignal: subscription changed:\", event);\n            this.setState({ isSubscribed: event.to.isSubscribed})\n        });\n        OneSignal.addPermissionObserver(event => {\n            this.OSLog(\"OneSignal: permission changed:\", event);\n        });\n        const state = await OneSignal.getDeviceState();\n\n        this.setState({\n            name : state.emailAddress,\n            isSubscribed : state.isSubscribed\n        });\n    }\n\n    componentWillUnmount() {\n        OneSignal.clearHandlers();\n    }\n\n    OSLog = (message: string, optionalArg?: Object) => {\n\n        if (optionalArg) {\n            message = message + JSON.stringify(optionalArg);\n        }\n\n        console.log(message);\n\n        let consoleValue;\n\n        if (this.state.consoleValue) {\n            consoleValue = this.state.consoleValue+\"\\n\"+message\n        } else {\n            consoleValue = message;\n        }\n        this.setState({ consoleValue });\n    }\n\n    inputChange = (text: string) => {\n        this.setState({ inputValue: text })\n    }\n\n    render() {\n        const subscribeFields : SubscribeFields = {\n            isSubscribed : this.state.isSubscribed,\n        }\n\n        return (\n            <View style={styles.root}>\n                <Text style={styles.title} >OneSignal</Text>\n                {renderButtonView(\"Clear\", 'gray', () => { this.setState({ consoleValue: \"\" }) })}\n                <OSConsole value={this.state.consoleValue}/>\n                <TextInput style={styles.input} placeholder=\"Input\" onChangeText={this.inputChange}/>\n                <OSButtons subscribeFields={subscribeFields} loggingFunction={this.OSLog} inputFieldValue={this.state.inputValue}/>\n            </View>\n        );\n    }\n};\n\n// styles\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    alignSelf: 'center'\n  },\n  title: {\n    fontSize: 40\n  },\n  buttons: {\n    flexDirection: 'row',\n    minHeight: 70,\n    alignItems: 'stretch',\n    alignSelf: 'center',\n    borderWidth: 5\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 0\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 2,\n    borderRadius: 5,\n    width: 300,\n    margin: 10\n  }\n});\n\nexport default OSDemo;\n"]}